// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        v4.25.3
// source: gamestate.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- game states ---
type PlayerType int32

const (
	PlayerType_Participant PlayerType = 0
	PlayerType_MainPlayer  PlayerType = 1
	PlayerType_Host        PlayerType = 2
)

// Enum value maps for PlayerType.
var (
	PlayerType_name = map[int32]string{
		0: "Participant",
		1: "MainPlayer",
		2: "Host",
	}
	PlayerType_value = map[string]int32{
		"Participant": 0,
		"MainPlayer":  1,
		"Host":        2,
	}
)

func (x PlayerType) Enum() *PlayerType {
	p := new(PlayerType)
	*p = x
	return p
}

func (x PlayerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlayerType) Descriptor() protoreflect.EnumDescriptor {
	return file_gamestate_proto_enumTypes[0].Descriptor()
}

func (PlayerType) Type() protoreflect.EnumType {
	return &file_gamestate_proto_enumTypes[0]
}

func (x PlayerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlayerType.Descriptor instead.
func (PlayerType) EnumDescriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{0}
}

type ChooseMainPlayerStrategy int32

const (
	ChooseMainPlayerStrategy_Random   ChooseMainPlayerStrategy = 0
	ChooseMainPlayerStrategy_Specific ChooseMainPlayerStrategy = 1
)

// Enum value maps for ChooseMainPlayerStrategy.
var (
	ChooseMainPlayerStrategy_name = map[int32]string{
		0: "Random",
		1: "Specific",
	}
	ChooseMainPlayerStrategy_value = map[string]int32{
		"Random":   0,
		"Specific": 1,
	}
)

func (x ChooseMainPlayerStrategy) Enum() *ChooseMainPlayerStrategy {
	p := new(ChooseMainPlayerStrategy)
	*p = x
	return p
}

func (x ChooseMainPlayerStrategy) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChooseMainPlayerStrategy) Descriptor() protoreflect.EnumDescriptor {
	return file_gamestate_proto_enumTypes[1].Descriptor()
}

func (ChooseMainPlayerStrategy) Type() protoreflect.EnumType {
	return &file_gamestate_proto_enumTypes[1]
}

func (x ChooseMainPlayerStrategy) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChooseMainPlayerStrategy.Descriptor instead.
func (ChooseMainPlayerStrategy) EnumDescriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{1}
}

type RootGameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to State:
	//
	//	*RootGameState_Lobby
	//	*RootGameState_WaitForQuestion
	//	*RootGameState_WaitForAnswer
	//	*RootGameState_WaitForMainPlayer
	//	*RootGameState_GameOver
	State isRootGameState_State `protobuf_oneof:"state"`
}

func (x *RootGameState) Reset() {
	*x = RootGameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootGameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootGameState) ProtoMessage() {}

func (x *RootGameState) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootGameState.ProtoReflect.Descriptor instead.
func (*RootGameState) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{0}
}

func (m *RootGameState) GetState() isRootGameState_State {
	if m != nil {
		return m.State
	}
	return nil
}

func (x *RootGameState) GetLobby() *LobbyGameState {
	if x, ok := x.GetState().(*RootGameState_Lobby); ok {
		return x.Lobby
	}
	return nil
}

func (x *RootGameState) GetWaitForQuestion() *WaitForQuestionState {
	if x, ok := x.GetState().(*RootGameState_WaitForQuestion); ok {
		return x.WaitForQuestion
	}
	return nil
}

func (x *RootGameState) GetWaitForAnswer() *WaitForAnswerState {
	if x, ok := x.GetState().(*RootGameState_WaitForAnswer); ok {
		return x.WaitForAnswer
	}
	return nil
}

func (x *RootGameState) GetWaitForMainPlayer() *WaitForMainPlayerState {
	if x, ok := x.GetState().(*RootGameState_WaitForMainPlayer); ok {
		return x.WaitForMainPlayer
	}
	return nil
}

func (x *RootGameState) GetGameOver() *GameOver {
	if x, ok := x.GetState().(*RootGameState_GameOver); ok {
		return x.GameOver
	}
	return nil
}

type isRootGameState_State interface {
	isRootGameState_State()
}

type RootGameState_Lobby struct {
	Lobby *LobbyGameState `protobuf:"bytes,1,opt,name=lobby,proto3,oneof"`
}

type RootGameState_WaitForQuestion struct {
	WaitForQuestion *WaitForQuestionState `protobuf:"bytes,2,opt,name=wait_for_question,json=waitForQuestion,proto3,oneof"`
}

type RootGameState_WaitForAnswer struct {
	WaitForAnswer *WaitForAnswerState `protobuf:"bytes,3,opt,name=wait_for_answer,json=waitForAnswer,proto3,oneof"`
}

type RootGameState_WaitForMainPlayer struct {
	WaitForMainPlayer *WaitForMainPlayerState `protobuf:"bytes,4,opt,name=wait_for_main_player,json=waitForMainPlayer,proto3,oneof"`
}

type RootGameState_GameOver struct {
	GameOver *GameOver `protobuf:"bytes,5,opt,name=game_over,json=gameOver,proto3,oneof"`
}

func (*RootGameState_Lobby) isRootGameState_State() {}

func (*RootGameState_WaitForQuestion) isRootGameState_State() {}

func (*RootGameState_WaitForAnswer) isRootGameState_State() {}

func (*RootGameState_WaitForMainPlayer) isRootGameState_State() {}

func (*RootGameState_GameOver) isRootGameState_State() {}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId    string     `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName  string     `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerType  PlayerType `protobuf:"varint,3,opt,name=player_type,json=playerType,proto3,enum=PlayerType" json:"player_type,omitempty"`
	AnswerGiven bool       `protobuf:"varint,4,opt,name=answer_given,json=answerGiven,proto3" json:"answer_given,omitempty"`
	StillAlive  bool       `protobuf:"varint,5,opt,name=still_alive,json=stillAlive,proto3" json:"still_alive,omitempty"`
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{1}
}

func (x *Player) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *Player) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *Player) GetPlayerType() PlayerType {
	if x != nil {
		return x.PlayerType
	}
	return PlayerType_Participant
}

func (x *Player) GetAnswerGiven() bool {
	if x != nil {
		return x.AnswerGiven
	}
	return false
}

func (x *Player) GetStillAlive() bool {
	if x != nil {
		return x.StillAlive
	}
	return false
}

type RunningGamePlayersInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players                      []*Player `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	MainPlayerScore              int64     `protobuf:"varint,2,opt,name=main_player_score,json=mainPlayerScore,proto3" json:"main_player_score,omitempty"`
	HintSkipQuestionAvailable    bool      `protobuf:"varint,3,opt,name=hint_skip_question_available,json=hintSkipQuestionAvailable,proto3" json:"hint_skip_question_available,omitempty"`
	HintMajorityOpinionAvailable bool      `protobuf:"varint,4,opt,name=hint_majority_opinion_available,json=hintMajorityOpinionAvailable,proto3" json:"hint_majority_opinion_available,omitempty"`
	HintTwoOpinionsAvailable     bool      `protobuf:"varint,5,opt,name=hint_two_opinions_available,json=hintTwoOpinionsAvailable,proto3" json:"hint_two_opinions_available,omitempty"`
}

func (x *RunningGamePlayersInfo) Reset() {
	*x = RunningGamePlayersInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunningGamePlayersInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunningGamePlayersInfo) ProtoMessage() {}

func (x *RunningGamePlayersInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunningGamePlayersInfo.ProtoReflect.Descriptor instead.
func (*RunningGamePlayersInfo) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{2}
}

func (x *RunningGamePlayersInfo) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *RunningGamePlayersInfo) GetMainPlayerScore() int64 {
	if x != nil {
		return x.MainPlayerScore
	}
	return 0
}

func (x *RunningGamePlayersInfo) GetHintSkipQuestionAvailable() bool {
	if x != nil {
		return x.HintSkipQuestionAvailable
	}
	return false
}

func (x *RunningGamePlayersInfo) GetHintMajorityOpinionAvailable() bool {
	if x != nil {
		return x.HintMajorityOpinionAvailable
	}
	return false
}

func (x *RunningGamePlayersInfo) GetHintTwoOpinionsAvailable() bool {
	if x != nil {
		return x.HintTwoOpinionsAvailable
	}
	return false
}

type LobbyGameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players                  []*Player                `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`
	ChooseMainPlayerStrategy ChooseMainPlayerStrategy `protobuf:"varint,2,opt,name=choose_main_player_strategy,json=chooseMainPlayerStrategy,proto3,enum=ChooseMainPlayerStrategy" json:"choose_main_player_strategy,omitempty"`
	MainPlayerId             *string                  `protobuf:"bytes,3,opt,name=main_player_id,json=mainPlayerId,proto3,oneof" json:"main_player_id,omitempty"`
}

func (x *LobbyGameState) Reset() {
	*x = LobbyGameState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyGameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyGameState) ProtoMessage() {}

func (x *LobbyGameState) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyGameState.ProtoReflect.Descriptor instead.
func (*LobbyGameState) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{3}
}

func (x *LobbyGameState) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *LobbyGameState) GetChooseMainPlayerStrategy() ChooseMainPlayerStrategy {
	if x != nil {
		return x.ChooseMainPlayerStrategy
	}
	return ChooseMainPlayerStrategy_Random
}

func (x *LobbyGameState) GetMainPlayerId() string {
	if x != nil && x.MainPlayerId != nil {
		return *x.MainPlayerId
	}
	return ""
}

type WaitForQuestionState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersInfo *RunningGamePlayersInfo `protobuf:"bytes,1,opt,name=players_info,json=playersInfo,proto3" json:"players_info,omitempty"`
}

func (x *WaitForQuestionState) Reset() {
	*x = WaitForQuestionState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForQuestionState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForQuestionState) ProtoMessage() {}

func (x *WaitForQuestionState) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForQuestionState.ProtoReflect.Descriptor instead.
func (*WaitForQuestionState) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{4}
}

func (x *WaitForQuestionState) GetPlayersInfo() *RunningGamePlayersInfo {
	if x != nil {
		return x.PlayersInfo
	}
	return nil
}

type QuestionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Question      string   `protobuf:"bytes,2,opt,name=question,proto3" json:"question,omitempty"`
	AnswerOptions []string `protobuf:"bytes,3,rep,name=answer_options,json=answerOptions,proto3" json:"answer_options,omitempty"`
}

func (x *QuestionInfo) Reset() {
	*x = QuestionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuestionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestionInfo) ProtoMessage() {}

func (x *QuestionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestionInfo.ProtoReflect.Descriptor instead.
func (*QuestionInfo) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{5}
}

func (x *QuestionInfo) GetQuestion() string {
	if x != nil {
		return x.Question
	}
	return ""
}

func (x *QuestionInfo) GetAnswerOptions() []string {
	if x != nil {
		return x.AnswerOptions
	}
	return nil
}

type WaitForAnswerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersInfo     *RunningGamePlayersInfo `protobuf:"bytes,1,opt,name=players_info,json=playersInfo,proto3" json:"players_info,omitempty"`
	QuestionInfo    *QuestionInfo           `protobuf:"bytes,2,opt,name=question_info,json=questionInfo,proto3" json:"question_info,omitempty"`
	MilisecondsLeft uint64                  `protobuf:"varint,3,opt,name=miliseconds_left,json=milisecondsLeft,proto3" json:"miliseconds_left,omitempty"`
}

func (x *WaitForAnswerState) Reset() {
	*x = WaitForAnswerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForAnswerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForAnswerState) ProtoMessage() {}

func (x *WaitForAnswerState) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForAnswerState.ProtoReflect.Descriptor instead.
func (*WaitForAnswerState) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{6}
}

func (x *WaitForAnswerState) GetPlayersInfo() *RunningGamePlayersInfo {
	if x != nil {
		return x.PlayersInfo
	}
	return nil
}

func (x *WaitForAnswerState) GetQuestionInfo() *QuestionInfo {
	if x != nil {
		return x.QuestionInfo
	}
	return nil
}

func (x *WaitForAnswerState) GetMilisecondsLeft() uint64 {
	if x != nil {
		return x.MilisecondsLeft
	}
	return 0
}

type SpoiledAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId  string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	AnswerIdx uint32 `protobuf:"varint,2,opt,name=answer_idx,json=answerIdx,proto3" json:"answer_idx,omitempty"`
}

func (x *SpoiledAnswer) Reset() {
	*x = SpoiledAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpoiledAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpoiledAnswer) ProtoMessage() {}

func (x *SpoiledAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpoiledAnswer.ProtoReflect.Descriptor instead.
func (*SpoiledAnswer) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{7}
}

func (x *SpoiledAnswer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *SpoiledAnswer) GetAnswerIdx() uint32 {
	if x != nil {
		return x.AnswerIdx
	}
	return 0
}

type WaitForMainPlayerState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayersInfo    *RunningGamePlayersInfo `protobuf:"bytes,1,opt,name=players_info,json=playersInfo,proto3" json:"players_info,omitempty"`
	QuestionInfo   *QuestionInfo           `protobuf:"bytes,2,opt,name=question_info,json=questionInfo,proto3" json:"question_info,omitempty"`
	SpoiledAnswers []*SpoiledAnswer        `protobuf:"bytes,3,rep,name=spoiled_answers,json=spoiledAnswers,proto3" json:"spoiled_answers,omitempty"`
}

func (x *WaitForMainPlayerState) Reset() {
	*x = WaitForMainPlayerState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WaitForMainPlayerState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForMainPlayerState) ProtoMessage() {}

func (x *WaitForMainPlayerState) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForMainPlayerState.ProtoReflect.Descriptor instead.
func (*WaitForMainPlayerState) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{8}
}

func (x *WaitForMainPlayerState) GetPlayersInfo() *RunningGamePlayersInfo {
	if x != nil {
		return x.PlayersInfo
	}
	return nil
}

func (x *WaitForMainPlayerState) GetQuestionInfo() *QuestionInfo {
	if x != nil {
		return x.QuestionInfo
	}
	return nil
}

func (x *WaitForMainPlayerState) GetSpoiledAnswers() []*SpoiledAnswer {
	if x != nil {
		return x.SpoiledAnswers
	}
	return nil
}

type GameOver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GameOver) Reset() {
	*x = GameOver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gamestate_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameOver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameOver) ProtoMessage() {}

func (x *GameOver) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameOver.ProtoReflect.Descriptor instead.
func (*GameOver) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{9}
}

var File_gamestate_proto protoreflect.FileDescriptor

var file_gamestate_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xbb, 0x02, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x62, 0x62, 0x79, 0x12, 0x43, 0x0a, 0x11,
	0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f,
	0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3d, 0x0a, 0x0f, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x57, 0x61, 0x69,
	0x74, 0x46, 0x6f, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x12, 0x4a, 0x0a, 0x14, 0x77, 0x61, 0x69, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x6d, 0x61, 0x69,
	0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x11, 0x77, 0x61, 0x69, 0x74, 0x46,
	0x6f, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x09,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x09, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x48, 0x00, 0x52, 0x08, 0x67, 0x61,
	0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22,
	0xb8, 0x01, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72,
	0x5f, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x47, 0x69, 0x76, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x69,
	0x6c, 0x6c, 0x5f, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x73, 0x74, 0x69, 0x6c, 0x6c, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x22, 0xae, 0x02, 0x0a, 0x16, 0x52,
	0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x6b, 0x69,
	0x70, 0x5f, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x68, 0x69, 0x6e, 0x74,
	0x53, 0x6b, 0x69, 0x70, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x45, 0x0a, 0x1f, 0x68, 0x69, 0x6e, 0x74, 0x5f, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x6f, 0x70, 0x69, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1c,
	0x68, 0x69, 0x6e, 0x74, 0x4d, 0x61, 0x6a, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x4f, 0x70, 0x69, 0x6e,
	0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x1b,
	0x68, 0x69, 0x6e, 0x74, 0x5f, 0x74, 0x77, 0x6f, 0x5f, 0x6f, 0x70, 0x69, 0x6e, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x18, 0x68, 0x69, 0x6e, 0x74, 0x54, 0x77, 0x6f, 0x4f, 0x70, 0x69, 0x6e, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x0e,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21,
	0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x07, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x73, 0x12, 0x58, 0x0a, 0x1b, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x5f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x4d,
	0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x79, 0x52, 0x18, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x29, 0x0a, 0x0e, 0x6d,
	0x61, 0x69, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x88, 0x01, 0x01, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x14, 0x57, 0x61, 0x69,
	0x74, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e,
	0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x51, 0x0a,
	0x0c, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xaf, 0x01, 0x0a, 0x12, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x51, 0x75, 0x65,
	0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x69, 0x6c, 0x69, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x5f, 0x6c, 0x65, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x6d, 0x69, 0x6c, 0x69, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x4c, 0x65,
	0x66, 0x74, 0x22, 0x4b, 0x0a, 0x0d, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x49, 0x64, 0x78, 0x22,
	0xc1, 0x01, 0x0a, 0x16, 0x57, 0x61, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0d, 0x71, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x37, 0x0a, 0x0f, 0x73, 0x70,
	0x6f, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x53, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x52, 0x0e, 0x73, 0x70, 0x6f, 0x69, 0x6c, 0x65, 0x64, 0x41, 0x6e, 0x73, 0x77,
	0x65, 0x72, 0x73, 0x22, 0x0a, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x2a,
	0x37, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a,
	0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x0e,
	0x0a, 0x0a, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x10, 0x02, 0x2a, 0x34, 0x0a, 0x18, 0x43, 0x68, 0x6f, 0x6f,
	0x73, 0x65, 0x4d, 0x61, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x10, 0x01, 0x42, 0x0c,
	0x5a, 0x0a, 0x2e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gamestate_proto_rawDescOnce sync.Once
	file_gamestate_proto_rawDescData = file_gamestate_proto_rawDesc
)

func file_gamestate_proto_rawDescGZIP() []byte {
	file_gamestate_proto_rawDescOnce.Do(func() {
		file_gamestate_proto_rawDescData = protoimpl.X.CompressGZIP(file_gamestate_proto_rawDescData)
	})
	return file_gamestate_proto_rawDescData
}

var file_gamestate_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gamestate_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_gamestate_proto_goTypes = []interface{}{
	(PlayerType)(0),                // 0: PlayerType
	(ChooseMainPlayerStrategy)(0),  // 1: ChooseMainPlayerStrategy
	(*RootGameState)(nil),          // 2: RootGameState
	(*Player)(nil),                 // 3: Player
	(*RunningGamePlayersInfo)(nil), // 4: RunningGamePlayersInfo
	(*LobbyGameState)(nil),         // 5: LobbyGameState
	(*WaitForQuestionState)(nil),   // 6: WaitForQuestionState
	(*QuestionInfo)(nil),           // 7: QuestionInfo
	(*WaitForAnswerState)(nil),     // 8: WaitForAnswerState
	(*SpoiledAnswer)(nil),          // 9: SpoiledAnswer
	(*WaitForMainPlayerState)(nil), // 10: WaitForMainPlayerState
	(*GameOver)(nil),               // 11: GameOver
}
var file_gamestate_proto_depIdxs = []int32{
	5,  // 0: RootGameState.lobby:type_name -> LobbyGameState
	6,  // 1: RootGameState.wait_for_question:type_name -> WaitForQuestionState
	8,  // 2: RootGameState.wait_for_answer:type_name -> WaitForAnswerState
	10, // 3: RootGameState.wait_for_main_player:type_name -> WaitForMainPlayerState
	11, // 4: RootGameState.game_over:type_name -> GameOver
	0,  // 5: Player.player_type:type_name -> PlayerType
	3,  // 6: RunningGamePlayersInfo.players:type_name -> Player
	3,  // 7: LobbyGameState.players:type_name -> Player
	1,  // 8: LobbyGameState.choose_main_player_strategy:type_name -> ChooseMainPlayerStrategy
	4,  // 9: WaitForQuestionState.players_info:type_name -> RunningGamePlayersInfo
	4,  // 10: WaitForAnswerState.players_info:type_name -> RunningGamePlayersInfo
	7,  // 11: WaitForAnswerState.question_info:type_name -> QuestionInfo
	4,  // 12: WaitForMainPlayerState.players_info:type_name -> RunningGamePlayersInfo
	7,  // 13: WaitForMainPlayerState.question_info:type_name -> QuestionInfo
	9,  // 14: WaitForMainPlayerState.spoiled_answers:type_name -> SpoiledAnswer
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_gamestate_proto_init() }
func file_gamestate_proto_init() {
	if File_gamestate_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_gamestate_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootGameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunningGamePlayersInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyGameState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForQuestionState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuestionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForAnswerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpoiledAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WaitForMainPlayerState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gamestate_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameOver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_gamestate_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*RootGameState_Lobby)(nil),
		(*RootGameState_WaitForQuestion)(nil),
		(*RootGameState_WaitForAnswer)(nil),
		(*RootGameState_WaitForMainPlayer)(nil),
		(*RootGameState_GameOver)(nil),
	}
	file_gamestate_proto_msgTypes[3].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gamestate_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gamestate_proto_goTypes,
		DependencyIndexes: file_gamestate_proto_depIdxs,
		EnumInfos:         file_gamestate_proto_enumTypes,
		MessageInfos:      file_gamestate_proto_msgTypes,
	}.Build()
	File_gamestate_proto = out.File
	file_gamestate_proto_rawDesc = nil
	file_gamestate_proto_goTypes = nil
	file_gamestate_proto_depIdxs = nil
}
